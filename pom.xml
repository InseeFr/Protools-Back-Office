<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>fr.insee.sndil.protools</groupId>
    <artifactId>protools-protlsbo</artifactId>
    <version>1.1.1-SNAPSHOT</version>
    <name>Protools Back Office</name>
    <description>Protools Back Office: Survey Orchestrator and Management Tool - Built with Flowable Engine</description>
    <properties>
        <java.version>17</java.version>
        <springdoc.version>2.5.0</springdoc.version>
        <properties-logger.version>1.0.0</properties-logger.version>
        <flowable.version>7.0.1-insee</flowable.version>
        <pitest.version>1.16.1</pitest.version>
        <pitest.junit.version>1.2.1</pitest.junit.version>
        <passay.version>1.6.4</passay.version>
        <groovy-version>4.0.21</groovy-version>
    </properties>


    <!-- to directly upload to nexus the snapshots with deploy goal-->
    <distributionManagement>
        <snapshotRepository>
            <id>protools-back-office</id>
            <name>Internal Releases</name>
            <url>https://nexus.insee.fr/repository/depot-local-snapshot/preparation_collecte/protools/protlsbo/</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>

        <dependency>
            <groupId>org.flowable</groupId>
            <artifactId>flowable-spring-boot-starter-process-rest</artifactId>
            <version>${flowable.version}</version>
        </dependency>

        <!-- INSEE properties logging lib -->
        <dependency>
            <groupId>fr.insee</groupId>
            <artifactId>boot-properties-logger-starter</artifactId>
            <version>${properties-logger.version}</version>
        </dependency>

        <!-- for password generation (used to init passwords in sugoi)-->
        <dependency>
            <groupId>org.passay</groupId>
            <artifactId>passay</artifactId>
            <version>${passay.version}</version>
        </dependency>

        <!-- to use groovy engine in script task in bpmn -->
        <dependency>
            <groupId>org.flowable</groupId>
            <artifactId>flowable-groovy-script-static-engine</artifactId>
            <version>${flowable.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.groovy</groupId>
            <artifactId>groovy-jsr223</artifactId>
            <version>${groovy-version}</version>
        </dependency>


        <!--H2 used for development-->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- postgre used when application is deployed-->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- Used to mock webserver responses in tests -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>1.12.3</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <!-- To validate the JSons against json-schema -->
        <dependency>
            <groupId>com.networknt</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>1.5.1</version>
        </dependency>

        <!-- to create Instant from json -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- to use protperty loader and load external jars
                <configuration>
                    <layout>ZIP</layout>
                </configuration>
                -->
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest.version}</version>
                <configuration>
                    <targetTests>
                        <param>fr.insee.protools.backend.*</param>
                    </targetTests>
                    <mutators>
                        <mutator>STRONGER</mutator>
                    </mutators>
                    <avoidCallsTo>
                        <avoidCallsTo>java.util.logging</avoidCallsTo>
                        <avoidCallsTo>org.apache.log4j</avoidCallsTo>
                        <avoidCallsTo>org.slf4j</avoidCallsTo>
                        <avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
                        <avoidCallsTo>fr.insee.protools.backend.logging</avoidCallsTo>
                        <avoidCallsTo>fr.insee.protools.backend.logging.LoggingHelper</avoidCallsTo>
                    </avoidCallsTo>
                    <excludedClasses>
                        <excludedClass>fr.insee.protools.backend.logging.*</excludedClass>
                        <excludedClass>fr.insee.protools.backend.dto.*</excludedClass>
                        <excludedClass>*xxBPMNError</excludedClass>
                    </excludedClasses>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>${pitest.junit.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <excludes>
                        <exclude>fr/insee/protools/backend/deprecated/**/*.java</exclude>
                    </excludes>
                    <testExcludes>
                        <testExclude>**/deprecated/**/*.java</testExclude>
                    </testExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jsonschema2pojo</groupId>
                <artifactId>jsonschema2pojo-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <dateTimeType>java.time.Instant</dateTimeType>
                    <sourceDirectory>${basedir}/src/main/resources/schema</sourceDirectory>
                    <targetPackage>fr.insee.protools.backend.dto</targetPackage>
                    <inclusionLevel>ALWAYS</inclusionLevel>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/jsonschema2pojo</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

</project>
