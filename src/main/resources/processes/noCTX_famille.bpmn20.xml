<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:flowable="http://flowable.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="Examples" exporter="Flowable Open Source Modeler" exporterVersion="6.8.0">
  <process id="famille" name="Chargement de contexte collecte web AVEC REM" isExecutable="true">
    <documentation>Processus de chargement du contexte de campagne pour une collecte Web dans platine Avec REM</documentation>
    <startEvent id="theStart" flowable:formFieldValidation="true"></startEvent>
    <endEvent id="theEnd" name="Fin normale du processus"></endEvent>

    <serviceTask id="createPlatineQuestionnaireContexte" name="Créer le contexte dans la plateforme de collecte web (partie Questionnaire)" flowable:delegateExpression="${platineQuestionnaireCreateContextTask}"/>
    <serviceTask id="createPlatinePilotageContexte" name="Créer le contexte dans la plateforme de collecte web (partie Pilotage)" flowable:delegateExpression="${platinePilotageCreateContextTask}"/>



    <subProcess id="partition-subprocess" name="sous process traitement des partitions">
      <multiInstanceLoopCharacteristics isSequential="false">
        <loopDataInputRef>contexte-partition-id-list</loopDataInputRef>
        <inputDataItem name="current-partition-id" />
      </multiInstanceLoopCharacteristics>

      <scriptTask id="initEraQueryParamScript" name="init era Query script" scriptFormat="groovy">
        <script>
          execution.setVariableLocal("era-query-start-date", java.time.LocalDate.of(2023,02,01));
          execution.setVariableLocal("era-query-end-date", java.time.LocalDate.of(2023,02,02));
        </script>
      </scriptTask>

      <scriptTask id="reduceSample" name="reducteur de liste d'UE" scriptFormat="groovy">
        <script>
          import static fr.insee.protools.backend.service.FlowableVariableNameConstants.VARNAME_ERA_RESPONSE;

          listeReduite = execution.getVariableLocal(VARNAME_ERA_RESPONSE, List.class);
          listeReduite=listeReduite.stream()
                        .filter(censusJsonDto -> censusJsonDto.getIdentifiantCompte().equalsIgnoreCase("FXMPES55"))
                        .toList();
          execution.setVariableLocal(VARNAME_ERA_RESPONSE, listeReduite);
        </script>
      </scriptTask>

      <startEvent id="partition-subprocess-start" flowable:formFieldValidation="true"></startEvent>
      <serviceTask id="getERA" name="Récupération liste d'UE dans ERA" flowable:delegateExpression="${eraGetSUForPeriodAndGenderTask}"></serviceTask>
      <serviceTask id="writeToREM" name="Ecriture dans REM" flowable:delegateExpression="${remWriteEraSUListTask}"></serviceTask>

      <serviceTask id="log_ssp_part" name="log niveau sous-process partition " flowable:delegateExpression="${logVariablesTask}"/>

      <endEvent id="partition-subprocess-end"></endEvent>

      <subProcess id="su-subprocess" name="sous process traitement UE">
        <multiInstanceLoopCharacteristics isSequential="false">
          <loopDataInputRef>rem-survey-unit-id-list</loopDataInputRef>
          <inputDataItem name="rem-survey-unit-id" />
        </multiInstanceLoopCharacteristics>
        <startEvent id="su-subprocess-start" flowable:formFieldValidation="true"/>
        <serviceTask id="su-subprocess-get-su" name="getREMSurveyUnit" flowable:delegateExpression="${remGetSUTask}"/>
        <serviceTask id="su-subprocess-extract-id-contact" name="extractIdContact" flowable:delegateExpression="${extractContactIdentifierFromREMSUTask}"/>


        <serviceTask id="log_ssp_su" name="LOG_SU" flowable:delegateExpression="${logVariablesTask}"/>
        <serviceTask id="su-subprocess-create-on-platine-pilotage" name="createSUPlatinePilotage" flowable:delegateExpression="${platinePilotageCreateSurveyUnitTask}"/>
        <serviceTask id="su-subprocess-create-on-platine-questionnaire" name="createSUPlatinePilotage" flowable:delegateExpression="${platineQuestionnaireCreateSurveyUnitTask}"/>

        <endEvent id="su-subprocess-end"/>

        <sequenceFlow id="su-subprocess-flow1" sourceRef="su-subprocess-start" targetRef="su-subprocess-get-su"/>
        <sequenceFlow id="su-subprocess-flow1a" sourceRef="su-subprocess-get-su" targetRef="log_ssp_su"/>
        <sequenceFlow id="su-subprocess-flow2" sourceRef="log_ssp_su" targetRef="su-subprocess-extract-id-contact"/>
        <sequenceFlow id="su-subprocess-flow3" sourceRef="su-subprocess-extract-id-contact" targetRef="su-subprocess-create-on-platine-pilotage"/>
        <sequenceFlow id="su-subprocess-flow4" sourceRef="su-subprocess-create-on-platine-pilotage" targetRef="su-subprocess-create-on-platine-questionnaire"/>
        <sequenceFlow id="su-subprocess-flow5" sourceRef="su-subprocess-create-on-platine-questionnaire" targetRef="su-subprocess-end"/>


      </subProcess>

      <sequenceFlow id="partition-subprocess-flow1" sourceRef="partition-subprocess-start" targetRef="initEraQueryParamScript"></sequenceFlow>
      <sequenceFlow id="partition-subprocess-flow2" sourceRef="initEraQueryParamScript" targetRef="getERA"></sequenceFlow>
      <sequenceFlow id="partition-subprocess-flow3" sourceRef="getERA" targetRef="reduceSample"></sequenceFlow>
      <sequenceFlow id="partition-subprocess-flow4" sourceRef="reduceSample" targetRef="writeToREM"></sequenceFlow>
      <sequenceFlow id="partition-subprocess-flow5" sourceRef="writeToREM" targetRef="log_ssp_part"></sequenceFlow>
      <sequenceFlow id="partition-subprocess-flow6" sourceRef="log_ssp_part" targetRef="su-subprocess"></sequenceFlow>
      <sequenceFlow id="partition-subprocess-flow7" sourceRef="su-subprocess" targetRef="partition-subprocess-end"></sequenceFlow>

    </subProcess>

    <sequenceFlow id="flow1" sourceRef="theStart" targetRef="createPlatinePilotageContexte"></sequenceFlow>
    <sequenceFlow id="flow2" sourceRef="createPlatinePilotageContexte" targetRef="createPlatineQuestionnaireContexte"></sequenceFlow>
    <sequenceFlow id="flow3" sourceRef="createPlatineQuestionnaireContexte" targetRef="partition-subprocess"></sequenceFlow>
    <sequenceFlow id="flow4" sourceRef="partition-subprocess" targetRef="theEnd"/>
  </process>
</definitions>


